// <auto-generated />
using BankAccountSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace BankAccountSystem.Data.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20170927153846_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankAccountSystem.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountNumber");

                    b.Property<decimal>("Balance");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.Property<decimal>("fundsMultiplier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccount");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BankAccount");
                });

            modelBuilder.Entity("BankAccountSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BankAccountSystem.Models.CheckingAccount", b =>
                {
                    b.HasBaseType("BankAccountSystem.Models.BankAccount");


                    b.ToTable("CheckingAccount");

                    b.HasDiscriminator().HasValue("CheckingAccount");
                });

            modelBuilder.Entity("BankAccountSystem.Models.SavingsAccount", b =>
                {
                    b.HasBaseType("BankAccountSystem.Models.BankAccount");


                    b.ToTable("SavingsAccount");

                    b.HasDiscriminator().HasValue("SavingsAccount");
                });

            modelBuilder.Entity("BankAccountSystem.Models.BankAccount", b =>
                {
                    b.HasOne("BankAccountSystem.Models.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
